import scrapy
import datetime
import time
class MiniSpider(scrapy.Spider):

    name = "db"

    strecken = [{"abfahrt": "Aachen ", "ankunft": " Hamm(Westf)"}, {"abfahrt": "Hamm(Westf) ", "ankunft": " Aachen"}, {"abfahrt": "Düsseldorf HBF ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Düsseldorf"}, {"abfahrt": "Düsseldorf HBF ", "ankunft": " Hamm(Westf)"}, {"abfahrt": "Hamm(Westf) ", "ankunft": " Düsseldorf"}, {"abfahrt": "Aachen ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Aachen"}, {"abfahrt": "Wesel ", "ankunft": " Bonn UN Campus"}, {"abfahrt": "Bonn UN Campus ", "ankunft": " Wesel"}, {"abfahrt": "Köln Bonn Flughafen ", "ankunft": " Minden"}, {"abfahrt": "Minden ", "ankunft": " Köln Bonn Flughafen"}, {"abfahrt": "Krefeld ", "ankunft": " Rheine"}, {"abfahrt": "Rheine ", "ankunft": " Krefeld"}, {"abfahrt": "Aachen ", "ankunft": " Siegen"}, {"abfahrt": "Siegen ", "ankunft": " Aachen"}, {"abfahrt": "Kleve ", "ankunft": " Düsseldorf HBF"}, {"abfahrt": "Düsseldorf HBF", "ankunft": " Kleve"}, {"abfahrt": "Düsseldorf HBF", "ankunft": " Paderborn"}, {"abfahrt": "Paderborn ", "ankunft": " Düsseldorf"}, {"abfahrt": "Köln ", "ankunft": " Trier"}, {"abfahrt": "Triet ", "ankunft": " Köln"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Hamm(Westf)"}, {"abfahrt": "Hamm(Westf) ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Borken(Westf)", "ankunft": " Essen "}, {"abfahrt": "Essen ", "ankunft": " Borken(Westf)"}, {"abfahrt": "Münster ", "ankunft": " Rheine"}, {"abfahrt": "Rheine ", "ankunft": " Münster"}, {"abfahrt": "Essen ", "ankunft": " Iserlohn"}, {"abfahrt": "Iserlohn ", "ankunft": " Essen"}, {"abfahrt": "Hagen ", "ankunft": " Warburg"}, {"abfahrt": "Warburg ", "ankunft": " Hagen"}, {"abfahrt": "Emmerich ", "ankunft": " Düsseldorf"}, {"abfahrt": "Düsseldorf HBF", "ankunft": " Emmerich"}, {"abfahrt": "Geilenkirche ", "ankunft": " Düren"}, {"abfahrt": "Düren ", "ankunft": " Geilenkirchen"}, {"abfahrt": "Düren", "ankunft": " Linnich Bhf"}, {"abfahrt": "Linnich Bhf", "ankunft": " Düren"}, {"abfahrt": "Köln ", "ankunft": " Euskirchen"}, {"abfahrt": "Euskirchen ", "ankunft": " Köln"}, {"abfahrt": "Bad Münstereifel ", "ankunft": " Euskirchen"}, {"abfahrt": "Euskirchen ", "ankunft": " Bad Münstereifel"}, {"abfahrt": "Köln ", "ankunft": " Kall"}, {"abfahrt": "Kall ", "ankunft": " Köln"}, {"abfahrt": "Köln ", "ankunft": " Lüdenscheid"}, {"abfahrt": "Lüdenscheid ", "ankunft": " Köln"}, {"abfahrt": "Köln ", "ankunft": " Bonn"}, {"abfahrt": "Bonn ", "ankunft": " Köln"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Bad Honnef"}, {"abfahrt": "Bad Honnef ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Düren ", "ankunft": " Euskirchen"}, {"abfahrt": "Euskirchen ", "ankunft": " Düren "}, {"abfahrt": "Duisburg ", "ankunft": " Xanten"}, {"abfahrt": "Xanten ", "ankunft": " Duisburg"}, {"abfahrt": "Bocholt ", "ankunft": " Wesel"}, {"abfahrt": "Aachen ", "ankunft": " Duisburg"}, {"abfahrt": "Duisburg ", "ankunft": " Aachen"}, {"abfahrt": "Dalheim ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Dalheim"}, {"abfahrt": "Wesel ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Wesel "}, {"abfahrt": "Duisburg", "ankunft": "Ruhrort "}, {"abfahrt": "Oberhausen ", "ankunft": " Duisburg"}, {"abfahrt": "Duisburg ", "ankunft": " Duisburg"}, {"abfahrt": "Duisburg", "ankunft": "Entenfang "}, {"abfahrt": "Bedburg ", "ankunft": " Köln Messe/Deutz"}, {"abfahrt": "Köln Messe/Deutz ", "ankunft": " Bedburg"}, {"abfahrt": "Düsseldorf HBF", "ankunft": " Bedburg"}, {"abfahrt": "Bedburg ", "ankunft": " Düsseldorf"}, {"abfahrt": "Essen ", "ankunft": " Hagen"}, {"abfahrt": "Hagen ", "ankunft": " Essen"}, {"abfahrt": "Münster ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Münster"}, {"abfahrt": "Brilon Stadt ", "ankunft": " Brilon Wald"}, {"abfahrt": "Brilon Wald ", "ankunft": " Brilon Stadt"}, {"abfahrt": "Dorsten ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Dorsten"}, {"abfahrt": "Dorsten ", "ankunft": " Oberhausen"}, {"abfahrt": "Oberhausen ", "ankunft": " Dorsten"}, {"abfahrt": "Dorsten ", "ankunft": " Coesfeld"}, {"abfahrt": "Coesfeld ", "ankunft": " Dorsten"}, {"abfahrt": "Gelsenkirchen ", "ankunft": " Bochum"}, {"abfahrt": "Bochum ", "ankunft": " Gelsenkirchen"}, {"abfahrt": "Wuppertal", "ankunft": "Oberbarmen "}, {"abfahrt": "Bonn", "ankunft": "Mehlem "}, {"abfahrt": "Dortmund ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Gronau "}, {"abfahrt": "Gronau ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Lüdenscheid"}, {"abfahrt": "Lüdenscheid ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Iserlohn"}, {"abfahrt": "Iserlohn ", "ankunft": " Dortmund"}, {"abfahrt": "Unna ", "ankunft": " Neuenrade"}, {"abfahrt": "Neuenrade ", "ankunft": " Unna"}, {"abfahrt": "Dortmund ", "ankunft": " Brilon Stadt"}, {"abfahrt": "Brilon Stadt ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Soest"}, {"abfahrt": "Soest ", "ankunft": " Dortmund"}, {"abfahrt": "Rheine ", "ankunft": " Ibbenbüren"}, {"abfahrt": "Ibbenbüren ", "ankunft": " Rheine"}, {"abfahrt": "Rheine ", "ankunft": " Bielefeld"}, {"abfahrt": "Bielefeld ", "ankunft": " Rheine"}, {"abfahrt": "Münster(W)Zentrum Nord ", "ankunft": " Coesfeld"}, {"abfahrt": "Coesfeld ", "ankunft": " Münster(W)Zentrum Nord"}, {"abfahrt": "Münster ", "ankunft": " Gronau"}, {"abfahrt": "Gronau ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Rheine"}, {"abfahrt": "Rheine ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Lengerich"}, {"abfahrt": "Lengerich ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Bielefeld"}, {"abfahrt": "Bielefeld ", "ankunft": " Münster"}, {"abfahrt": "Münster ", "ankunft": " Bielefeld"}, {"abfahrt": "Bielefeld ", "ankunft": " Münster"}, {"abfahrt": "Bielefeld ", "ankunft": " Minden"}, {"abfahrt": "Minden ", "ankunft": " Bielefeld"}, {"abfahrt": "Bielefeld ", "ankunft": " Rahden"}, {"abfahrt": "Rahden ", "ankunft": " Bielefeld"}, {"abfahrt": "Herford ", "ankunft": " Paderborn"}, {"abfahrt": "Paderborn ", "ankunft": " Herford"}, {"abfahrt": "Bielefeld ", "ankunft": " Paderborn"}, {"abfahrt": "Paderborn ", "ankunft": " Bielefeld"}, {"abfahrt": "Löhne ", "ankunft": " Rinteln"}, {"abfahrt": "Rinteln ", "ankunft": " Löhne"}, {"abfahrt": "Minden ", "ankunft": " Bielefeld"}, {"abfahrt": "Bielefeld ", "ankunft": " Minden"}, {"abfahrt": "Bielefeld ", "ankunft": " Altenbeken"}, {"abfahrt": "Altenbeken ", "ankunft": " Bielefeld"}, {"abfahrt": "Ottbergen ", "ankunft": " Paderborn"}, {"abfahrt": "Paderborn ", "ankunft": " Ottbergen"}, {"abfahrt": "Ottbergen ", "ankunft": " Paderborn"}, {"abfahrt": "Paderborn ", "ankunft": " Ottbergen"}, {"abfahrt": "Münster ", "ankunft": " Warburg"}, {"abfahrt": "Warburg ", "ankunft": " Münster"}, {"abfahrt": "Siegen ", "ankunft": " Au(Sieg)"}, {"abfahrt": "Au(Sieg) ", "ankunft": " Siegen"}, {"abfahrt": "Hagen ", "ankunft": " Iserlohn"}, {"abfahrt": "Iserlohn ", "ankunft": " Hagen"}, {"abfahrt": "Siegen ", "ankunft": " Bad Berleburg"}, {"abfahrt": "Bad Berleburg ", "ankunft": " Siegen"}, {"abfahrt": "Siegen ", "ankunft": " Wilnsdorf"}, {"abfahrt": "Wilnsdorf", "ankunft": "Rudersdorf(Siegen)"}, {"abfahrt": "Neunkirchen ", "ankunft": " Burbach Mitte"}, {"abfahrt": "Burbach Mitte", "ankunft": " Neunkirchen"}, {"abfahrt": "Dortmund ", "ankunft": " Solingen"}, {"abfahrt": "Solingen ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Gelsenkirchen"}, {"abfahrt": "Gelsenkirchen ", "ankunft": " Dortmund"}, {"abfahrt": "Oberhausen ", "ankunft": "Hattingen(R) Mitte"}, {"abfahrt": "Hattingen(R) Mitte", "ankunft": " Oberhausen"}, {"abfahrt": "Unna ", "ankunft": " Dortmund"}, {"abfahrt": "Dortmund ", "ankunft": " Hagen"}, {"abfahrt": "Hagen ", "ankunft": " Dortmund"},  {"abfahrt": "Wupptertal ", "ankunft": " Solingen"}, {"abfahrt": "Hagen ", "ankunft": " Mönchengladbach"}, {"abfahrt": "Mönchengladbach ", "ankunft": " Hagen"}, {"abfahrt": "Marl(Westf) Mitte", "ankunft": " Bottrop"}, {"abfahrt": "Bottrop ", "ankunft": " Marl(Westf) Mitte"}, {"abfahrt": "Köln ", "ankunft": " Au(Sieg)"}, {"abfahrt": "Au(Sieg) ", "ankunft": " Köln"}, {"abfahrt": "Aachen ", "ankunft": " Troisdorf"}, {"abfahrt": "Troisdorf ", "ankunft": " Aachen"}, {"abfahrt": "Düren ", "ankunft": " Au(Sieg)"}, {"abfahrt": "Au(Sieg) ", "ankunft": " Düren"}, {"abfahrt": "Bonn ", "ankunft": " Euskirchen"}, {"abfahrt": "Euskirchen ", "ankunft": " Bonn"}, {"abfahrt": "Mettmann Stadtwald ", "ankunft": " Neuss"}, {"abfahrt": "Wuppertal", "ankunft": "Vohwinkel "}]
    
    custom_settings = {
        #'USER_AGENT' : 'usermuser1234',
        'ROBOTSTXT_OBEY' :  False,
    }
    
    start_urls = ["https://www.bahn.de/p/view/index.shtml"
        
    ]
    now = datetime.datetime.now()
    weekdays = ["Mo","Di","Mi","Do","Fr","Sa","So"]
    weekday = datetime.datetime.today().weekday()
    weekday = weekdays[weekday]

    def parse(self, response):
        for strecke in self.strecken:
		    yield scrapy.Request("https://rabdc.bahn.de/bin/query.exe/dn?revia=yes&existOptimizePrice=1&country=DEU&dbkanal_007=L01_S01_D001_KIN0001_qf-bahn-svb-nn-kl2_lz03&start=1&protocol=https%3A&REQ0JourneyStopsS0A=1&S="+strecke["ankunft"]+"&Z="+strecke["abfahrt"]+"&REQ0JourneyStopsZID=&date="+self.weekday+"%2C+"+str(self.now.day)+"."+str(self.now.month)+"."+str(self.now.year)+"&time="+str(self.now.hour)+"%3A"+str(self.now.minute)+"&timesel=depart&returnDate=&returnTime=&returnTimesel=depart&optimize=0&journeyProducts=1016&auskunft_travelers_number=1&tariffTravellerType.1=E&tariffTravellerReductionClass.1=0&tariffClass=2&rtMode=DB-HYBRID&externRequest=yes&HWAI=JS%21js%3Dyes%21ajax%3Dyes%21",
                callback= self.parse_artikel)

    #def parse_kategorie(self, response):
        

            
    def parse_artikel(self, response):
        if response.css("title::text").extract_first().find("Verbindungen - Fehler") > 0:
            if not response.css("p:nth-child(4)::text").extract_first().find("H9380") > 0:
                time.sleep(5)
                yield scrapy.Request(response.url,dont_filter=True,callback=self.parse_artikel)
        else:
            time_blocks = response.css(".last .time")
            if not time_blocks:
                yield {"time_block":"null", "url":response.url, "body":response.text} 
            for block in time_blocks:
                prognosed_time = block.css("::text").extract_first()
                actual_time = block.css(".delay::text").extract_first()
                yield { "Prognose":prognosed_time, "Echt Zeit": actual_time
                        }
        

    

